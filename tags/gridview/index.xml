<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GridView on Blog .NET de Thomas Levesque</title>
    <link>https://thomaslevesque.fr/tags/gridview/</link>
    <description>Recent content in GridView on Blog .NET de Thomas Levesque</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Fri, 22 Nov 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://thomaslevesque.fr/tags/gridview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[WinRT] Sélectionner un élément de liste lors d’un appui long</title>
      <link>https://thomaslevesque.fr/2013/11/22/winrt-selectionner-un-element-de-liste-lors-d-un-appui-long/</link>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.fr/2013/11/22/winrt-selectionner-un-element-de-liste-lors-d-un-appui-long/</guid>
      <description>Comme vous le savez probablement, la méthode standard pour sélectionner ou déselectionner un élément dans un contrôle de liste WinRT est de le faire glisser légèrement vers le haut ou vers le bas. Même si j’aime bien ce geste, il n’est pas très intuitif pour les utilisateurs qui ne sont pas habitués à Modern UI. Et ça devient encore plus déroutant, car ma déclaration précédente n’est pas tout à fait exacte : en fait, il faut faire glisser l’élément perpendiculairement à la direction de défilement de la liste.</description>
    </item>
    
    <item>
      <title>[WPF] Tri automatique d’un GridView : suite</title>
      <link>https://thomaslevesque.fr/2009/08/04/wpf-tri-automatique-dun-gridview-suite/</link>
      <pubDate>Tue, 04 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.fr/2009/08/04/wpf-tri-automatique-dun-gridview-suite/</guid>
      <description>Il y a quelques mois, j&amp;rsquo;avais publié un billet où j&amp;rsquo;expliquais comment trier automatiquement un GridView lors du clic sur un en-tête de colonne. J&amp;rsquo;avais laissé un point ouvert : l&amp;rsquo;ajout d&amp;rsquo;un symbole dans l&amp;rsquo;en-tête de colonne pour indiquer visuellement la direction du tri. C&amp;rsquo;est maintenant chose faite ! Pour arriver à ce résultat, j&amp;rsquo;ai utilisé un Adorner : c&amp;rsquo;est un composant qui permet de dessiner &amp;ldquo;par-dessus&amp;rdquo; un élément graphique existant, sur une couche de dessin indépendante.</description>
    </item>
    
    <item>
      <title>[WPF] Tri automatique d&#39;un GridView lors du clic sur une colonne</title>
      <link>https://thomaslevesque.fr/2009/03/27/wpf-tri-automatique-dun-gridview-lors-du-clic-sur-une-colonne/</link>
      <pubDate>Fri, 27 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.fr/2009/03/27/wpf-tri-automatique-dun-gridview-lors-du-clic-sur-une-colonne/</guid>
      <description>Il est assez simple, en WPF, de présenter des données sous forme de grille, grâce à la classe GridView. Pour le tri, en revanche, ça se complique&amp;hellip; Avec le DataGridView de Windows Forms, c&amp;rsquo;était &amp;ldquo;automagique&amp;rdquo; : quand l&amp;rsquo;utilisateur cliquait sur un en-tête de colonne, le tri se faisait automatiquement sur cette colonne. En WPF, par contre, il faut un peu mettre les mains dans le cambouis&amp;hellip; La méthode préconisée par Microsoft pour trier un GridView lors du clic sur une colonne est décrite dans cet article ; elle est basée sur l&amp;rsquo;évènement Click du GridViewColumnHeader.</description>
    </item>
    
  </channel>
</rss>
