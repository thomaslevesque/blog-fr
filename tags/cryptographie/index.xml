<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cryptographie on Blog .NET de Thomas Levesque</title>
    <link>https://thomaslevesque.fr/tags/cryptographie/</link>
    <description>Recent content in cryptographie on Blog .NET de Thomas Levesque</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Sun, 26 May 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thomaslevesque.fr/tags/cryptographie/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Une façon simple et sécurisée de stocker un mot de passe à l&#39;aide de Data Protection API</title>
      <link>https://thomaslevesque.fr/2013/05/26/une-facon-simple-et-securisee-de-stocker-un-mot-de-passe-a-laide-de-data-protection-api/</link>
      <pubDate>Sun, 26 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.fr/2013/05/26/une-facon-simple-et-securisee-de-stocker-un-mot-de-passe-a-laide-de-data-protection-api/</guid>
      <description>Si vous écrivez une application cliente qui a besoin de stocker des identifiants d&amp;rsquo;utilisateur, ce n&amp;rsquo;est généralement pas une bonne idée de stocker le mot de passe en clair, pour des raisons évidentes de sécurité. Il faut donc le chiffrer, mais dès qu&amp;rsquo;on commence à envisager le chiffrement, cela soulève toutes sortes de problèmes&amp;hellip; Quel algorithme utiliser ? Quelle clé de chiffrement ? Clairement on va avoir besoin de cette clé pour déchiffrer le mot de passe, il faut donc qu&amp;rsquo;elle se trouve dans l&amp;rsquo;exécutable ou dans la configuration.</description>
    </item>
    
  </channel>
</rss>