<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>parsing on Blog .NET de Thomas Levesque</title>
    <link>https://thomaslevesque.fr/tags/parsing/</link>
    <description>Recent content in parsing on Blog .NET de Thomas Levesque</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Tue, 28 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://thomaslevesque.fr/tags/parsing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parser du texte facilement en C# avec Sprache</title>
      <link>https://thomaslevesque.fr/2017/02/28/parser-du-texte-facilement-en-c-avec-sprache/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.fr/2017/02/28/parser-du-texte-facilement-en-c-avec-sprache/</guid>
      <description>Il y a quelques jours, j&amp;rsquo;ai découvert un petit bijou : Sprache. Le nom signifie &amp;ldquo;langage&amp;rdquo; en allemand. C&amp;rsquo;est une librairie très élégante et facile à utiliser pour créer des analyseurs de texte, à l&amp;rsquo;aide de parser combinators, qui sont une technique très courante en programmation fonctionnelle. Le concept théorique peut sembler un peu effrayant, mais comme vous allez le voir dans un instant, Sprache rend ça très accessible.
Analyse syntaxique L&amp;rsquo;analyse syntaxique (parsing) est une tâche très courante, mais qui peut être laborieuse et où il est facile de faire des erreurs.</description>
    </item>
    
  </channel>
</rss>
